// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using examen_DAL;

namespace examen_DAL.Migrations
{
    [DbContext(typeof(TicketContext))]
    [Migration("20230830205226_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("examen_models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Koelkast garage"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Koelkast keuken"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bankje kelder links 1"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bankje kelder links 2"
                        });
                });

            modelBuilder.Entity("examen_models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Barcode = "1",
                            Description = "Verse banaan uit Colombia.",
                            Name = "Verse banaan"
                        },
                        new
                        {
                            Id = 2,
                            Barcode = "2",
                            Description = "Glazen potje.",
                            Name = "Crème brûlée"
                        },
                        new
                        {
                            Id = 3,
                            Barcode = "3",
                            Description = "Taart.",
                            Name = "Taart"
                        },
                        new
                        {
                            Id = 4,
                            Barcode = "4",
                            Description = "Wit brood, 900g.",
                            Name = "Wit brood"
                        },
                        new
                        {
                            Id = 5,
                            Barcode = "5",
                            Description = "Halfvolle melk van de lokale boer.",
                            Name = "Brik halfvolle melk 1L"
                        },
                        new
                        {
                            Id = 6,
                            Barcode = "6",
                            Description = "Appel van de lokale boer zonder pesticide.",
                            Name = "Appel"
                        },
                        new
                        {
                            Id = 7,
                            Barcode = "7",
                            Description = "Flesje koffie melk.",
                            Name = "Koffie melk 330cl"
                        },
                        new
                        {
                            Id = 8,
                            Barcode = "8",
                            Description = "Een fruitdrink met de verrassende smaakcombinatie ananas en guave. Een fruitdrink met de verrassende smaakcombinatie ananas en guave.",
                            Name = "Dubbeldrank Ananas & guave"
                        });
                });

            modelBuilder.Entity("examen_models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationId = 1,
                            ProductId = 1,
                            Qty = 1
                        },
                        new
                        {
                            Id = 2,
                            LocationId = 2,
                            ProductId = 1,
                            Qty = 3
                        },
                        new
                        {
                            Id = 3,
                            LocationId = 1,
                            ProductId = 3,
                            Qty = 1
                        },
                        new
                        {
                            Id = 4,
                            LocationId = 3,
                            ProductId = 4,
                            Qty = 1
                        });
                });

            modelBuilder.Entity("examen_models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lidl"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Carrefour"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Spar"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Aldi"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Delhaize"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Albert Heijn"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Jumbo"
                        });
                });

            modelBuilder.Entity("examen_models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PurchaseDate = new DateTime(2023, 8, 30, 22, 52, 26, 492, DateTimeKind.Local).AddTicks(8484),
                            StoreId = 1,
                            Total = 2.0
                        },
                        new
                        {
                            Id = 2,
                            PurchaseDate = new DateTime(2023, 8, 30, 22, 52, 26, 494, DateTimeKind.Local).AddTicks(7813),
                            StoreId = 7,
                            Total = 7.0
                        });
                });

            modelBuilder.Entity("examen_models.TicketsProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<int>("VatPercentageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TicketId");

                    b.HasIndex("VatPercentageId");

                    b.ToTable("TicketsProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Qty = 2,
                            TicketId = 1,
                            UnitPrice = 1.0,
                            VatPercentageId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 8,
                            Qty = 5,
                            TicketId = 2,
                            UnitPrice = 1.3999999999999999,
                            VatPercentageId = 4
                        });
                });

            modelBuilder.Entity("examen_models.VatPercentage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VatPercentages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Percentage = 0
                        },
                        new
                        {
                            Id = 2,
                            Percentage = 6
                        },
                        new
                        {
                            Id = 3,
                            Percentage = 11
                        },
                        new
                        {
                            Id = 4,
                            Percentage = 21
                        });
                });

            modelBuilder.Entity("examen_models.Stock", b =>
                {
                    b.HasOne("examen_models.Location", "Location")
                        .WithMany("Stocks")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("examen_models.Product", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("examen_models.Ticket", b =>
                {
                    b.HasOne("examen_models.Store", "Store")
                        .WithMany("Tickets")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("examen_models.TicketsProducts", b =>
                {
                    b.HasOne("examen_models.Product", "Product")
                        .WithMany("TicketsProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("examen_models.Ticket", "Ticket")
                        .WithMany("TicketsProducts")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("examen_models.VatPercentage", "VatPercentage")
                        .WithMany("TicketsProducts")
                        .HasForeignKey("VatPercentageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
